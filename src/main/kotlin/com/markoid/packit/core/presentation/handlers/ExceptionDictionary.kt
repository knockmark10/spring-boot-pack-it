package com.markoid.packit.core.presentation.handlers

import org.springframework.http.HttpStatus

enum class ExceptionDictionary(val key: String, val statusCode: HttpStatus) {
    SERVICE_UNAVAILABLE("SERVICE_UNAVAILABLE", HttpStatus.INTERNAL_SERVER_ERROR),
    MISSING_PARAMETERS("MISSING_PARAMETERS", HttpStatus.BAD_REQUEST),

    USER_NOT_FOUND("USER_NOT_FOUND", HttpStatus.BAD_REQUEST),
    INVALID_CREDENTIALS("INVALID_CREDENTIALS", HttpStatus.BAD_REQUEST),
    DRIVER_CREATED_SUCCESSFULLY("DRIVER_CREATED_SUCCESSFULLY", HttpStatus.OK),
    DRIVER_ALREADY_EXISTS("DRIVER_ALREADY_EXISTS", HttpStatus.BAD_REQUEST),
    DRIVER_NOT_FOUND("DRIVER_NOT_FOUND", HttpStatus.BAD_REQUEST),
    USER_CREATED_SUCCESSFULLY("USER_CREATED_SUCCESSFULLY", HttpStatus.OK),
    USER_ALREADY_EXISTS("USER_ALREADY_EXISTS", HttpStatus.BAD_REQUEST),
    USER_TYPE_INVALID("USER_TYPE_INVALID", HttpStatus.BAD_REQUEST),
    USER_NAME_INVALID("USER_NAME_INVALID", HttpStatus.BAD_REQUEST),
    USER_LAST_NAME_INVALID("USER_LAST_NAME_INVALID", HttpStatus.BAD_REQUEST),
    USER_EMAIL_INVALID("USER_EMAIL_INVALID", HttpStatus.BAD_REQUEST),
    USER_PASSWORD_INVALID("USER_PASSWORD_INVALID", HttpStatus.BAD_REQUEST),
    ACCESS_NOT_GRANTED("ACCESS_NOT_GRANTED", HttpStatus.FORBIDDEN),
    TOKEN_FAILED("TOKEN_FAILED", HttpStatus.UNAUTHORIZED),

    SHIPMENT_DELETION_ERROR("SHIPMENT_DELETION_ERROR", HttpStatus.BAD_REQUEST),
    SHIPMENT_DELETION_SUCCESSFUL("SHIPMENT_DELETION_SUCCESSFUL", HttpStatus.OK),
    SHIPMENT_NOT_FOUND("SHIPMENT_NOT_FOUND", HttpStatus.BAD_REQUEST),
    SHIPMENT_CREATION_ERROR("SHIPMENT_CREATION_ERROR", HttpStatus.BAD_REQUEST),
    SHIPMENT_CREATION_SUCCESSFUL("SHIPMENT_CREATION_SUCCESSFUL", HttpStatus.OK),
    SHIPMENT_UPDATE_ERROR("SHIPMENT_UPDATE_ERROR", HttpStatus.BAD_REQUEST),
    SHIPMENT_UPDATE_SUCCESSFUL("SHIPMENT_UPDATE_SUCCESSFUL", HttpStatus.OK),

    TRIP_UNATACHABLE("TRIP_UNATACHABLE", HttpStatus.BAD_REQUEST),
    TRIP_SHIPMENT_ATTACHED_PREVIOUSLY("TRIP_SHIPMENT_ATTACHED_PREVIOUSLY", HttpStatus.BAD_REQUEST),
    TRIP_SHIPMENT_NOT_ATTACHED_TO_USER("TRIP_SHIPMENT_NOT_ATTACHED_TO_USER", HttpStatus.BAD_REQUEST),
    TRIP_ATTACHED_SUCCESSFULLY("TRIP_ATTACHED_SUCCESSFULLY", HttpStatus.OK),
    TRIP_NOT_FOUND("TRIP_NOT_FOUND", HttpStatus.BAD_REQUEST),
    TRIP_ATTACHMENTS_NOT_FOUND("TRIP_ATTACHMENTS_NOT_FOUND", HttpStatus.BAD_REQUEST),
    TRIP_UPDATED_SUCCESSFULLY("TRIP_UPDATED_SUCCESSFULLY", HttpStatus.OK),
    TRIP_UPDATED_ERROR("TRIP_UPDATED_ERROR", HttpStatus.BAD_REQUEST),
    TRIP_NOT_ATTACHED_TO_USER("TRIP_NOT_ATTACHED_TO_USER", HttpStatus.BAD_REQUEST),
    TRIP_DRIVERS_NOT_FOUND("TRIP_DRIVERS_NOT_FOUND", HttpStatus.BAD_REQUEST),
    TRIP_USER_NOT_FOUND("TRIP_USER_NOT_FOUND", HttpStatus.BAD_REQUEST),
    TRIP_DRIVER_UNASSIGNED("TRIP_DRIVER_UNASSIGNED", HttpStatus.BAD_REQUEST),
    TRIP_SHIPMENT_NOT_BELONG("TRIP_SHIPMENT_NOT_BELONG", HttpStatus.BAD_REQUEST)
}